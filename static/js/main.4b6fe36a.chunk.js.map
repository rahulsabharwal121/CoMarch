{"version":3,"sources":["ui.png","google.png","StateProvider.js","Header.js","firebase.js","SidebarOption.js","Sidebar.js","Messages.js","ChatInput.js","Chat.js","reducer.js","UserAuth.js","StartChat.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Header","user","className","src","logo","alt","Avatar","displayName","photoURL","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarOption","Icon","title","id","addChannelOption","history","useHistory","onClick","channelName","prompt","collection","add","name","push","Sidebar","useState","channels","setChannels","useEffect","onSnapshot","snapshot","docs","map","doc","data","AddCircleOutlinedIcon","channel","Messages","message","timestamp","userImg","Date","toDate","toUTCString","ChatInput","channelId","input","setInput","onChange","e","target","type","preventDefault","time","FieldValue","serverTimestamp","userimg","Chat","roomId","useParams","roomDetails","setRoomDetails","roomMessages","setRoomMessages","orderBy","console","log","actionTypes","state","action","UserAuth","dispatch","signInWithPopup","then","result","catch","error","alert","glogo","StartChat","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b6fe36a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ui.97647e53.png\";","module.exports = __webpack_public_path__ + \"static/media/google.1b943d72.png\";","import React, { createContext, useContext, useReducer} from 'react'\r\n\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({reducer, initialState, children}) => (\r\n\t<StateContext.Provider value={useReducer(reducer, initialState)}>\r\n\t\t{children}\r\n\t</StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React from 'react'\r\nimport \"./Header.css\"\r\nimport {Avatar} from '@material-ui/core'\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport { useStateValue } from './StateProvider'\r\nimport logo from './ui.png'\r\n\r\n\r\n function Header() {\r\n \tconst [{user}] = useStateValue();\r\n \treturn (\r\n \t\t<div className=\"header\">\r\n\t\t<div className=\"header__left\">\r\n\t\t\t<img className=\"cmlogo\" src={logo} alt=\"Logo\"/><h1>CoMarch</h1>\r\n\t\t</div>\r\n\t\t<div className=\"header__right\">\r\n\t\t\t<Avatar className=\"header__avatar\" alt={user?.displayName} src={user?.photoURL}/>\r\n\t\t</div>\r\n\t\t</div>\r\n \t)\r\n }\r\n export default Header","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD5NSqT2vYJoszxKe_j-bTEigqhWLBYfM8\",\r\n  authDomain: \"comarch-c27dc.firebaseapp.com\",\r\n  databaseURL: \"https://comarch-c27dc.firebaseio.com\",\r\n  projectId: \"comarch-c27dc\",\r\n  storageBucket: \"comarch-c27dc.appspot.com\",\r\n  messagingSenderId: \"75509912384\",\r\n  appId: \"1:75509912384:web:5b53e74955fd5c99f760a5\",\r\n  measurementId: \"G-PCFMQG97GG\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider =  new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {auth,provider};\r\nexport default db;","import React from 'react'\r\nimport './SidebarOption.css'\r\nimport {useHistory} from 'react-router-dom'\r\nimport db from './firebase'\r\n\r\nfunction SidebarOption({Icon, title, id, addChannelOption}) {\r\n\r\n\tconst history = useHistory();\r\n\r\n\tconst selectChannel = () => {\r\n\t\tif(id) {\r\n\t\t\thistory.push(`/room/${id}`)\r\n\t\t}else{\r\n\t\t\thistory.push(title);\r\n\t\t}\r\n\t}\r\n\r\n\tconst addChannel = () => {\r\n\t\tconst channelName = prompt(\"Enter Channel Name\");\r\n\r\n\t\tif(channelName){\r\n\t\t\tdb.collection(\"rooms\").add({\r\n\t\t\t\tname : channelName,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"sidebarOption\"\r\n\t\tonClick={addChannelOption ? addChannel : selectChannel}>\r\n\t\t{Icon && <Icon className=\"sidebarOption__icon\"/>}\r\n\t\t{Icon ? (\r\n\t\t\t<h3>{title}</h3>\r\n\t\t\t):(\r\n\t\t\t<h3 className=\"sidebarOption__channel\">\r\n\t\t\t<span className=\"sidebarOption__hash\">#</span>{title}\r\n\t\t\t</h3>)}\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default SidebarOption","import React, {useState, useEffect} from 'react'\r\nimport './Sidebar.css'\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport SidebarOption from \"./SidebarOption.js\"\r\nimport db from \"./firebase\"\r\nimport { useStateValue } from './StateProvider'\r\nimport AddCircleOutlinedIcon from '@material-ui/icons/AddCircleOutlined';\r\n\r\n\r\nfunction Sidebar() {\r\n\r\n\tconst [channels, setChannels] = useState([]);\r\n\tconst [{user}] = useStateValue();\r\n\r\n\tuseEffect(() => {\r\n\t\tdb.collection(\"rooms\").onSnapshot(snapshot => {\r\n\t\t\tsetChannels(\r\n\t\t\t\tsnapshot.docs.map(doc=>({\r\n\t\t\t\t\tid: doc.id,\r\n\t\t\t\t\tname: doc.data().name,  \r\n\t\t\t\t}))\r\n\t\t\t\t)\r\n\t\t})\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div className=\"sidebar\">\r\n\t\t<div className=\"sidebar__header\">\r\n\t\t\t<div className=\"sidebar__info\">\r\n\t\t\t<h3>\r\n\t\t\t<FiberManualRecordIcon/>\r\n\t\t\t{user?.displayName}\r\n\t\t\t</h3>\r\n\t\t\t</div>\r\n\t\t<CreateIcon />\r\n\t\t</div>\r\n\t\t<hr />\r\n\t\t<SidebarOption className=\"add\"  Icon={AddCircleOutlinedIcon} addChannelOption={true} title=\"Add Topic\" />\r\n\t\t<hr />\r\n\t\t{channels.map(channel => (\r\n\t\t\t<SidebarOption title={channel.name} id={channel.id}/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Sidebar","import React from 'react'\r\nimport \"./Messages.css\"\r\n\r\n\r\nfunction Messages({message, timestamp, user,userImg}) {\r\n\treturn (\r\n\t\t<div className=\"message\">\r\n\t\t\t<img src={userImg} alt=\"img\"/>\r\n\t\t\t<div>\r\n\t\t\t\t<h4>\r\n\t\t\t\t{user} <span className=\"message__timestamp\">{new Date(timestamp?.toDate()).toUTCString()}</span>\r\n\t\t\t\t</h4>\r\n\t\t\t\t<p>{message}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Messages","import React, {useState} from 'react'\r\nimport './ChatInput.css'\r\nimport db from './firebase'\r\nimport firebase from 'firebase'\r\nimport { useStateValue } from \"./StateProvider\"; \r\n\r\n\r\nfunction ChatInput({channelName, channelId}) {\r\n\r\n\tconst [input, setInput] = useState('');\r\n\tconst [{user}] = useStateValue();\r\n\r\n\tconst sendMessage = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (channelId) {\r\n\t\t\tsetInput('')\r\n\t\t\tdb.collection('rooms').doc(channelId).collection('messages').add({\r\n\t\t\t\tmessage : input,\r\n\t\t\t\ttime: firebase.firestore.FieldValue.serverTimestamp(),\r\n\t\t\t\tuser: user.displayName,\r\n\t\t\t\tuserimg: user.photoURL,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"ChatInput\">\r\n\t\t<form>\r\n\t\t<div className=\"chat__message\">\r\n\t\t\t<input  className= \"input__field\"\r\n\t\t\tvalue={input}\r\n\t\t\tonChange={(e) => setInput(e.target.value)} />\r\n\t\t\t<div className=\"btn\">\r\n\t\t\t\t<button type=\"submit\" onClick={sendMessage}>\r\n\t\t\t\tMessage {channelName}\r\n\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default ChatInput;","import React, {useState, useEffect} from 'react'\r\nimport './Chat.css'\r\nimport  {useParams} from 'react-router-dom'\r\nimport StarBorderOutlineIcon from '@material-ui/icons/StarBorder'\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined'\r\nimport db from './firebase'\r\nimport Messages from './Messages'\r\nimport ChatInput from './ChatInput'\r\n\r\nfunction Chat() {\r\n\tconst {roomId} = useParams();\r\n\tconst [roomDetails, setRoomDetails] =useState(null);\r\n\tconst [roomMessages, setRoomMessages] =useState([]);\r\n\r\n\tuseEffect(()=>{\r\n\t\tif(roomId){\r\n\t\t\tdb.collection('rooms').doc(roomId).onSnapshot(snapshot => {\r\n\t\t\t\tsetRoomDetails(snapshot.data())\r\n\t\t\t})\r\n\t\t}\r\n\t\tdb.collection('rooms').doc(roomId)\r\n\t\t.collection('messages')\r\n\t\t.orderBy('time', 'asc')\r\n\t\t.onSnapshot((snapshot) => {\r\n\t\tsetRoomMessages(snapshot.docs.map(doc => doc.data()));})\r\n\t}, [roomId])\r\n\r\n\r\nconsole.log(roomMessages);\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"chat\">\r\n\t\t<div className=\"chat__header\">\r\n\t\t\t<div className=\"chat__headerLeft\">\r\n\t\t\t<h4 className=\"chat__channelName\">\r\n\t\t\t<strong>#{roomDetails?.name}</strong>\r\n\t\t\t<StarBorderOutlineIcon />\r\n\t\t\t</h4>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"chat__headerRight\">\r\n\t\t\t<p><InfoOutlinedIcon />Details</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"chat__messages\">\r\n\t\t{roomMessages.map(({message, time, user, userimg}) => (\r\n\t\t\t\t\t<Messages \r\n\t\t\t\t\tmessage = {message}\r\n\t\t\t\t\ttimestamp = {time}\r\n\t\t\t\t\tuser = {user}\r\n\t\t\t\t\tuserImg = {userimg}/>\r\n\t\t\t\t))}\r\n\t\t</div>\r\n\r\n\t\t<ChatInput channelName={roomDetails?.name} channelId ={roomId}/>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Chat","export const initialState = {\r\n\tuser: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n\tSET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) =>{\r\n\tconsole.log(action);\r\n\r\n\tswitch(action.type){\r\n\t\tcase actionTypes.SET_USER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuser: action.user\r\n\t\t\t}\r\n\r\n\t\tdefault: \r\n\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default reducer;","import React from 'react'\r\nimport './UserAuth.css'\r\nimport logo from './ui.png'\r\nimport {auth, provider} from './firebase'\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { actionTypes } from \"./reducer\"\r\nimport glogo from './google.png'\r\nimport firebase from 'firebase'\r\n\r\nfunction UserAuth() {\r\nconst [state, dispatch] = useStateValue();\r\n\r\nconst signIn = (e) => {\r\n\tauth.signInWithPopup(provider).then(function(result) {\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.SET_USER,\r\n\t\t\tuser: result.user,\r\n\t\t})\r\n\t})\r\n\t.catch((error) => {\r\n\t\talert(error.message)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"login\">\r\n\t\t<div className=\"login__container\">\r\n\t\t\t<img src={logo} alt=\"logo\"/>\r\n\t\t\t<h1> CoMarch </h1>\r\n\t\t\t<div className=\"google__signin\" onClick={signIn}>\r\n\t\t\t<h1>Sign in with</h1>\r\n\t\t\t<img src={glogo} alt=\"GOOGLE\"/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default UserAuth","import React from 'react'\r\n\r\nfunction StartChat() {\r\n\treturn (\r\n\t\t<div>\r\n\t\tChoose Topic to Chat\r\n\t\tOR\r\n\t\tCreate Topic\r\n\t\t</div>\r\n\t\t)\r\n}\r\nexport default StartChat","import React, {useState} from 'react';\nimport './App.css';\nimport Header from './Header.js'\nimport Sidebar from './Sidebar.js'\nimport Chat from './Chat.js'\nimport UserAuth from './UserAuth'\nimport { useStateValue } from './StateProvider'\nimport { BrowserRouter as Router, Switch,  Route} from 'react-router-dom'\nimport StartChat from './StartChat'\n\nfunction App() {\n  const [{user}, dispatch] = useStateValue();\n\n\n  return (\n    <div className=\"App\">\n    <Router>\n    {!user?(\n      <UserAuth />\n      ):(\n    <>\n      <Header />\n      <div className=\"app__body\">\n      <Sidebar />\n\n      <Switch>\n\n      <Route path=\"/room/:roomId\">\n        <Chat />\n      </Route>\n\n      <Route path=\"/\">\n        <StartChat />\n      </Route>\n\n      </Switch>\n      </div>\n    </>\n    )}\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {StateProvider} from \"./StateProvider\";\nimport reducer, {initialState} from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n  <StateProvider initialState={initialState} reducer ={reducer}>\n    <App />\n   </ StateProvider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}